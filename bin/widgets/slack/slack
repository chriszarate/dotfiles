#!/usr/bin/env bash

err() {
	local current_dir
	local error_file

	current_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
	error_file="$current_dir/error"

	echo "$1" > "$error_file"
	exit 1
}

get_slack_status() {
	local api
	local dms
	local mentions
	local status
	local token
	local total

	token="$1"

	if ! jq --version >/dev/null 2>&1; then
		err "NO_JQ"
	fi

	if [[ -z $token ]]; then
		err "TOK"
	fi

	api="https://slack.com/api/users.counts"
	status="$(curl -s -d "token=$token" $api)"

	case "$(echo "$status" | jq -r '.error')" in
		null)
			;;
		not_authed)
			err 'AUTH'
			;;
		invalid_auth)
			err 'AUTH'
			;;
		account_inactive)
			err 'AUTH'
			;;
		*)
			err "$status"
			;;
	esac

	dms="$(echo "$status" | jq "[.ims[].dm_count] | add")"
	mentions="$(echo "$status" | jq "[.groups + .channels | . -map(select(.is_archived)) | .[].mention_count_display] | add")"
	total=$((dms + mentions))

	if [[ $total -gt 0 ]]; then
		echo "ï†˜ $total"
	fi
}

main() {
	local cache_file
	local cache_ttl
	local current_dir
	local error_file
	local now
	local mod
	local token_file

	current_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
	cache_file="$current_dir/cache"
	cache_ttl=60
	token_file="$current_dir/token"

	if [[ -f "$error_file" ]]; then
		echo "ERR"
		exit 1
	fi

	if [[ ! -f "$token_file" ]]; then
		err "TOKEN"
	fi

	if [[ -f "$cache_file" ]]; then
		now=$(date +%s)
		mod=$(date -r "$cache_file" +%s)
		if [[ $(( now - mod )) -gt $cache_ttl ]]; then
			rm "$cache_file"
		fi
	fi

	if [[ ! -f "$cache_file" ]]; then
		get_slack_status "$(cat "$token_file")" > "$cache_file"
	fi

	cat "$cache_file"
}

main
