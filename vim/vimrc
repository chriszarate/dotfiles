" Environment
scriptencoding utf-8
set background=dark
set colorcolumn=81
set encoding=utf-8
set fileencoding=utf-8
set hidden
set hlsearch
set ignorecase
set list
set listchars=tab:┄\ ,trail:·
set nobackup
set number
set pastetoggle=<leader>P
set relativenumber
set shiftwidth=2
set shortmess+=c
set showcmd
set smartcase
set splitbelow
set splitright
set tabstop=2
set updatetime=300
set visualbell

" Leader
nmap <space> <leader>

" Plugins
call plug#begin()

Plug 'alvan/vim-closetag'
let g:closetag_filenames='*.html,*.jsx,*.xml'
let g:closetag_xhtml_filenames='*.jsx,*.xml'

Plug 'airblade/vim-rooter'

Plug 'ap/vim-buftabline'
let g:buftabline_indicators=1
let g:buftabline_show=1

Plug 'editorconfig/editorconfig-vim'

Plug 'itchyny/lightline.vim'
Plug 'maximbaz/lightline-ale'
let g:lightline={
	\ 'active': {
	\   'left': [ [ 'mode', 'paste' ],
	\             [],
	\             [ 'filename' ] ],
	\   'right': [ [ 'lineinfo' ],
	\              [ 'linter_warnings', 'linter_errors', 'linter_ok' ],
	\              [ 'filetype' ] ]
	\ },
	\ 'colorscheme': 'gruvbox',
	\ 'component_expand': {
	\   'linter_warnings': 'lightline#ale#warnings',
	\   'linter_errors': 'lightline#ale#errors',
	\   'linter_ok': 'lightline#ale#ok'
	\ },
	\ 'component_type': {
	\   'linter_errors': 'error',
	\   'linter_warnings': 'warning'
	\ },
	\ }
let g:lightline#ale#indicator_errors='x'
let g:lightline#ale#indicator_warnings='~'

Plug 'janko/vim-test'

Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
let $FZF_DEFAULT_COMMAND='ag -g ""'
let $FZF_DEFAULT_OPTS="--exact"
nnoremap <leader>b :Buffers<cr>
nnoremap <leader>c :Commands<cr>
nnoremap <leader>h :History<cr>
nnoremap <leader>p :Files<cr>
nnoremap <leader>s :call fzf#run({'source': prosession#ListSessions(), 'sink': 'Prosession', 'down': '30%'})<cr>
nnoremap <leader>/ :call fzf#vim#ag('', {'options': '-q ' . shellescape(expand('<cword>')) . ' --delimiter : --nth 4..'})<cr>
nnoremap <leader>? :call fzf#vim#ag('', {'options': '--delimiter : --nth 4..'})<cr>

Plug 'junegunn/vim-peekaboo'
Plug 'justinmk/vim-dirvish'
let g:netrw_fastbrowse='0'

Plug 'liuchengxu/vista.vim'
let g:vista_default_executive = 'coc'
nnoremap <leader>r :Vista!!<cr>

Plug 'machakann/vim-highlightedyank'

Plug 'mbbill/undotree'
nnoremap <leader>u :UndotreeToggle<cr>:UndotreeFocus<cr>

Plug 'mhinz/vim-sayonara'
nnoremap <silent> <leader>q :Sayonara<cr>
nnoremap <silent> <leader>x :Sayonara!<cr>
let g:sayonara_confirm_quit=1

Plug 'mhinz/vim-signify'
let g:signify_vcs_list=['git']

Plug 'morhetz/gruvbox'
let g:gruvbox_contrast_dark="hard"
let g:gruvbox_sign_column="bg0"

Plug 'neoclide/coc.nvim', {'branch': 'release'}
let g:coc_global_extensions = [
\ 'coc-emoji',
\ 'coc-json',
\ 'coc-pairs',
\ 'coc-phpls',
\ 'coc-tsserver',
\ 'coc-yaml',
\ ]
let g:coc_user_config={
\ 'diagnostic.displayByAle': v:true,
\ 'suggest.echodocSupport': v:true,
\ 'suggest.enablePreview': v:true
\ }
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gr <Plug>(coc-references)
nnoremap <leader>t :CocList symbols<cr>

inoremap <silent><expr> <tab>
\ pumvisible() ? "\<C-n>" :
\ <sid>check_back_space() ? "\<tab>" :
\ coc#refresh()
inoremap <expr><s-tab> pumvisible() ? "\<c-p>" : "\<c-h>"
function! s:check_back_space() abort
	let col = col('.') - 1
	return !col || getline('.')[col - 1]  =~# '\s'
endfunction

Plug 'romainl/vim-cool'
Plug 'sheerun/vim-polyglot'

Plug 'svermeulen/vim-cutlass'
nnoremap x d
xnoremap x d
nnoremap X dd

Plug 'tpope/vim-commentary'

Plug 'tpope/vim-fugitive'
nnoremap <leader>g :Gstatus<cr>
nnoremap <leader>d :Gvdiff<cr>

Plug 'tpope/vim-obsession'
Plug 'dhruvasagar/vim-prosession' " Must be loaded after vim-obsession
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-unimpaired'

Plug 'unblevable/quick-scope'
let g:qs_highlight_on_keys=['f', 'F', 't', 'T']

Plug 'w0rp/ale'
let g:ale_linters={
	\   'css':        ['stylelint'],
	\   'dockerfile': ['hadolint'],
	\   'javascript': ['eslint'],
	\   'php':        ['phpcs'],
	\   'sh':         ['shellcheck'],
	\ }
let g:ale_php_phpcs_standard='WordPress'
let g:ale_sign_column_always=1
let g:ale_sign_error='x'
let g:ale_sign_warning='~'

call plug#end()

" Buffers
nnoremap <leader><tab> :b#<cr>
nnoremap <leader>X :%bd<cr>
nnoremap <leader>z :u<cr>
nnoremap <leader>Z :redo<cr>
nnoremap S :w<cr>

" Colorscheme
if &t_Co >= 256
	colorscheme gruvbox
end

" Harder
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
vnoremap <up> <nop>
vnoremap <down> <nop>

" Jumps
nnoremap <tab> <c-o>
nnoremap <s-tab> <c-i>

" Mouse
if has('mouse')
	set mouse=a
end

" Navigation
inoremap jj <esc>

" Pasting
nnoremap <leader>v p`[v`]=
nnoremap <leader>V P`[v`]=

" Windows
map <space><space> <c-w>
