## Exports
export EDITOR=vim


## Prompt
export PS1='\w$(parse_git_status)$ '


## Functions

# Get git repository status in shorthand form (branch name and cleanliness).
function parse_git_status () {
  open_string=""
  close_string=""
  while IFS= read statusline; do
    if [[ -n "$statusline" ]]; then
      # Branch name
      if [[ "$statusline" == $'## '* ]]; then
        git_branch="\001\033[48;5;236;38;5;015m\002⎇ ${statusline:3}\001\033[0m\002"
      fi
      # Staged for commit
      if [[ -z "$git_staged" && "$statusline" =~ ^[MADR] ]]; then
        git_staged="\001\033[32m\002●\001\033[0m\002"
      fi
      # Modified files
      if [[ -z "$git_modified" && "$statusline" == $' M '* ]]; then
        git_modified="\001\033[33m\002●\001\033[0m\002"
      fi
      # Untracked files
      if [[ -z "$git_untracked" && "$statusline" == $'?'* ]]; then
        git_untracked="\001\033[31m\002●\001\033[0m\002"
      fi
    fi
  done <<< "$(git status -b --porcelain 2>/dev/null)"
  echo -en "${git_branch}${git_staged}${git_modified}${git_untracked}"
}

# Open SSH sessions in new tmux window and connect to a nested tmux session.
function tmux_ssh () {
  if [ -n "$2" ]; then
    if [ "$1" = "-notmux" ]; then
      shift
    fi
    ssh "$@"
  else
    tmux new-window -n "$1" """ssh -t "$1" '(command -v tmux >/dev/null 2>&1 && (tmux attach || tmux new-session -s ssh)) || bash -l'""" && tmux_food
  fi
}
alias ssh="tmux_ssh"
alias pssh="tmux_ssh -notmux"

# Change to directory of the frontmost Finder window.
function cdf () {
  cd "$(osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)')"
}

# Find the target of a redirecting URL.
function expandurl () {
# wget -S $1 2>&1 | grep ^Location;
  curl -sIL $1 | grep '^Location' | tail -n 1 | awk '{print $2}'
}

# Change git remote by supplying user/repo.
function gitremote () {
  if [ -d ".git" ] && [ -n "$1" ]; then
    git remote rm origin
    git remote add origin git@github.com:${1}.git
    git config master.remote origin
    git config master.merge refs/heads/master
    echo "Updated git remote to git@github.com:${1}.git"
  else
    echo "Not a git repository."
  fi
}
